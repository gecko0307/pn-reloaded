<?xml version="1.0"?>
<Scheme>
	<keyword-classes>
		<keyword-class name="glsl">
			attribute const uniform varying in out flat
			layout buffer struct subroutine
			void bool int uint float double vec2 vec3 vec4 mat2 mat3 mat4
			bvec2 bvec3 bvec4 ivec2 ivec3 ivec4 uvec2 uvec3 uvec4 dvec2 dvec3 dvec4
			mat2x2 mat3x3 mat4x4 mat2x3 mat3x2 mat2x4 mat4x2 mat3x4 mat4x3
			if else for do while break continue switch case default return discard
			sampler1D sampler2D sampler3D samplerCube sampler2DRect
			sampler1DArray sampler2DArray samplerCubeArray samplerBuffer
			sampler2DMS sampler2DMSArray sampler1DShadow sampler2DShadow samplerCubeShadow
			sampler2DRectShadow sampler1DArrayShadow sampler2DArrayShadow samplerCubeArrayShadow
		</keyword-class>
	</keyword-classes>

	<language base="cppbase" name="glsl" title="GLSL" folding="true" foldcomments="true">
		<lexer name="cpp" />
		<comments line="//" streamStart="/*" streamEnd="*/" blockStart="/**" blockLine=" *" blockEnd=" */" />
		<property name="lexer.cpp.track.preprocessor" value="0" />
		<use-keywords>
			<keyword key="0" name="Keywords" class="glsl"/>
		</use-keywords>
		<use-styles>
			<style name="Preprocessor" key="9" class="preprocessor"/>
		</use-styles>
	</language>
</Scheme>
